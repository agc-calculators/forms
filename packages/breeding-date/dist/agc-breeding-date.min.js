var AgcBreedingDate=function(a,b){"use strict";return a.calculate=a=>new Promise((c,d)=>{let e={package:"breeding-date",properties:{...a},values:{}};if(!a.calvingDate)return void d({package:"breeding-date",scope:"#/properties/calvingDate",message:"Calving date is required",i18n:"properties.calving-date.required"});if(!a.gestationPeriod)return void d({package:"calving-date",scope:"#/properties/gestationPeriod",message:"Gestation period is required",i18n:"properties.gestation-period.required"});let f=b.parseDate(a.calvingDate);e.values.calvingDate=f;let g=parseInt(a.gestationPeriod);e.values.gestationPeriod=g,e.values.breedingDate=b.parseDate(b.addDays(f,-g)),e.values.breedingDate_mmddyyyy=b.formatDate(e.values.breedingDate,"MM/DD/YYYY"),e.calculated=new Date,c(e)}),a.schema={type:"object",properties:{calvingDate:{title:"Calving Date",id:"calvingDate",type:"string",format:"date",required:!0},gestationPeriod:{title:"Gestation Period",id:"gestationPeriod",type:"string",enum:["279","280","281","282","283","284","285","286","287"],required:!0}},required:["calvingDate","gestationPeriod"]},a.uischema={type:"VerticalLayout",elements:[{type:"Control",scope:"#/properties/calvingDate"},{type:"Control",scope:"#/properties/gestationPeriod"}]},a}({},AgcCore);
